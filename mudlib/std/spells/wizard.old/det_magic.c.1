/*** Detect Magic Spell ***/
/*** Created by Eerevann Tokani ***/
/* fixed for NPC's / wands Taniwha */

#define SP_NAME "Detect Magic"
#define GP_COST 2
#define SPELLTYPE "misc"

inherit "/std/spells/patch.c";

/* find_unique_match() does a find match that ensures the returned
	object list contains no duplicates
	find_one_match() returns only the first matched object
*/
mixed find_unique_match(string find,mixed in);
mixed find_one_match(string find,mixed in);
int ADJ_COST;
object caster;

string help() {
		 return
		 "\n\n"
       "Spell Name: "+SP_NAME+"\n"
		 "School: Lesser Divination\n"
       "Level: 1st\n"
		 "Gp Cost: "+GP_COST+"\n"
       "Description: \n"
		 "    This spell is used to determine whether an item is magical or "
       "not.  The brightness of a magical item also gives the caster "
       "an idea of its power.  This spell must be cast upon and item to "
       "work properly.\n\n";
       

}

mixed spell(string str, int skill, int cast);

int cast_spell(string str,object cast)
{
  int skill;
  mixed ret;

  if(cast) caster = cast;
  else caster = this_player();

  ret = spell(str, skill, 1);
  if (stringp(ret))
  {
	 notify_fail(ret);
	 return 0;
  }
  tell_object(caster,"You start to cast "+SP_NAME+".\n");
  tell_room(environment(caster),caster->query_cap_name()+" begins to cast a spell.\n",
	  caster);
  return 1;
  }

mixed spell(string str, int skill, int cast)
{
  mixed ob;

  if ((int)caster->query_spell_effect(SPELLTYPE))
    return "You are already casting an "+SPELLTYPE+" spell.\n";
  ob = find_one_match(str, environment(caster));
  if (sizeof(ob))
	 ob = ob[0];
  else
	 ob = 0;

  caster->add_spell_effect(1, SPELLTYPE, SP_NAME,
    this_object(), "hb_spell", ({ skill,ob,cast }));
  return 1;
}

int hb_spell(object caster, mixed *params)
{
/*** variables, dependant upon spell ***/


  if (!params[1])
  {
	 tell_object(caster,
    "Your spell failed ... the item isn't here.\n");
    return 0;
  }
	if(living(params[1]))
	{
	 tell_object(caster,
		"You can't cast this spell upon a living person!\n");
	 return 0;
	}

	/* Specialists spend only half guild points to cast spells native to their
	 * school, so GP_COST is checked and halved, if necessary.     */

  ADJ_COST = GP_COST;

  if(interactive(caster) && (string)caster->query_guild_name() == "diviner")
	 ADJ_COST = GP_COST/2;

  if (params[2] && (int)caster->adjust_gp(-ADJ_COST)<0)
  {
	 tell_object(caster, "You are too mentally drained to cast.\n");
    return 0;
  }
    
  tell_room(environment(caster),(string)caster->query_cap_name()+
	" chants, 'magius is iseio'.\n", ({params[1],caster}));
    


	 tell_object(caster, "You chant, 'magius is iseio'.\n");
	 tell_object(caster, "You cast "+SP_NAME+" upon the "+
      params[1]->query_short()+".\n");
	 tell_room(environment(caster),(string)caster->query_cap_name()+
      " casts a spell upon the "+params[1]->query_short()+".\n",
		caster);
	 tell_room(environment(caster),(string)caster->query_cap_name()+
      " looks intently at the "+params[1]->query_short()+".\n",
		caster);
	 tell_object(caster,
       params[1]->enchant_string()+"\n");
    
 /*** specific spell stuff here ***/

  return GP_COST;
}
